<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
	파일명	: WHOUT_REG.xml
	설명	: 출고등록 관리
	수정일		 	수정자		수정내용
	2021.10.22	염국선		최초작성
-->
<mapper namespace="yam.wm.WHOUT_REG">

    <!-- 출고 조회 -->
	<select id="selMstInfo" resultType="java.util.HashMap"  parameterType="java.util.HashMap">
		SELECT
			M.WHOUT_ID,		#출고ID
			M.SECTR_ID,		#섹터ID
			M.WHOUT_NO,		#출고번호
			M.WHOUT_DY,		#출고일자
			M.WHOUT_GB,		#출고구분
			M.WH_CD,		#창고코드
			M.PARTNR_ID,	#거래처ID
			P.PARTNR_NM, 	#거래처명
            M.OD_ID,		#지시서ID
            M.OD_NO,		#지시서NO
			M.REMARKS,		#비고
			M.WHOUT_ST,		#출고상태
			'R' 	AS ROW_CRUD
			
		FROM T_WHOUT_H M
			LEFT OUTER JOIN WZ_PARTNR_H P
				ON 	P.PARTNR_ID	= M.PARTNR_ID

		WHERE	M.WHOUT_ID	= #{WHOUT_ID}

	</select>
	
	<!-- 출고항목 목록 조회 -->
	<select id="selSubList" resultType="java.util.HashMap"  parameterType="java.util.HashMap">
		SELECT
			M.WHOUT_ID,		#출고ID
			M.WHOUT_SN,		#출고순번
			M.ITM_ID,		#품목ID
			itm.ITM_CD,		#품목코드
			itm.ITM_NM,		#품목명
			M.WHOUT_UN,		#출고단위
			M.WHOUT_QTY,	#출고수량
			M.WHOUT_PRC,	#출고단가
			M.WHOUT_SPL_AM,	#출고공급금액
			M.WHOUT_VAT,	#출고부가세
			M.WHOUT_SUM_AM,	#출고합계금액
			M.OD_ID,		#지시서ID
			M.OD_SN,		#지시서순번
			M.CANCEL_YN,	#취소여부
			'R' 	AS ROW_CRUD

		FROM T_WHOUT_L M
			INNER JOIN V_ITM itm
				ON	itm.ITM_ID	= M.ITM_ID
		
		WHERE	M.WHOUT_ID	= #{WHOUT_ID}
			AND M.USE_YN	= 'Y'
		
	</select>

	<!-- 출고품목 -->
	<select id="subItmCdInfo" resultType="java.util.HashMap"  parameterType="java.util.HashMap">
		SELECT
			M.SECTR_ID,			#섹터ID
			M.SIO_YYYY,				#재고수불년도
			M.SIO_MM,				#재고수불월
			M.WH_CD,				#창고코드
			M.ITM_ID,				#품목코드
			S.ITM_NM,				#품목이름
			S.ITM_GB,				#품목구분
			F_CD_NM(S.SECTR_ID, 'ITM_GB', S.ITM_GB)			AS ITM_GB_NM,		#품목구분명
			M.SIO_UN,				#품목단위
			F_CD_NM(M.SECTR_ID, 'QTY_UN', M.SIO_UN)			AS SIO_UN_NM,		#재고단위명
			M.STOCK_QTY,			#재고수량
			S.SIO_MNG_GB,			#재고수불구분
			F_CD_NM(S.SECTR_ID, 'SIO_MNG_GB', S.SIO_MNG_GB)	AS SIO_MNG_GB_NM	#재고수불구분명

		FROM T_SIO_ITM M
				 INNER JOIN V_ITM S
							ON		S.SECTR_ID	= M.SECTR_ID
								AND S.ITM_ID		= M.ITM_ID

		WHERE	M.SECTR_ID	= #{SS_USER_INFO.SECTR_ID, jdbcType=VARCHAR}
			AND M.SIO_YYYY		= #{SIO_YYYY}
			AND M.SIO_MM		= #{SIO_MM}
			<if test="WH_CD != null and WH_CD != '' ">
				AND M.WH_CD			= #{WH_CD}
			</if>
			AND S.ITM_CD		= #{ITM_CD}

	</select>

    <!-- 출하지시에서 넘어온 출고일 경우 출하지시 정보 -->
    <select id="selDoInfo" resultType="java.util.HashMap"  parameterType="java.util.HashMap">
        SELECT
            M.DO_ID,
            M.DO_NO,
            M.PARTNR_ID,
            P.PARTNR_NM,
            M.DO_GB,
            M.DO_ST,
            M.WH_CD,
            M.DO_DY,
            M.DO_REMARKS

        FROM T_DO_H M
                LEFT JOIN WZ_PARTNR_H P ON M.PARTNR_ID = P.PARTNR_ID
        <where>
            AND M.DO_ID         = #{DO_ID}
            AND M.USE_YN		= 'Y'
        </where>
    </select>

    <!-- 출하지시서의 품목목록 -->
    <select id="selDoList" resultType="java.util.HashMap"  parameterType="java.util.HashMap">
        SELECT
            M.DO_NO,
            M.DO_ST,
            L.DO_ID,
            L.DO_SN,
            L.DO_ID     AS OD_ID,
            L.DO_SN     AS OD_SN,
            L.ITM_ID,
            itm.ITM_NM,
            itm.ITM_CD,
            L.DO_UN,
            L.DO_UN     AS WHOUT_UN,
            L.DO_QTY,
#             L.OD_ID,
#             L.OD_SN,
            CASE
                WHEN M.DO_ST = '30' AND L.WHOUT_QTY IS NULL THEN L.DO_QTY   #출하확정이면 지시수량을 기본으로 셋팅
                ELSE L.WHOUT_QTY
                END AS WHOUT_QTY,
            P.STOCK_QTY,
            L.USE_YN,
            M.REG_ID,
            M.REG_DT,
            M.UPD_ID,
            M.UPD_DT,
            'R' 		AS ROW_CRUD
        FROM T_DO_L L
                 INNER JOIN T_DO_H M    ON 		M.DO_ID 	= L.DO_ID
                 INNER JOIN V_ITM itm
                        ON 		L.ITM_ID 	= itm.ITM_ID
                            AND M.SECTR_ID 	= itm.SECTR_ID
                 LEFT OUTER JOIN T_SIO_ITM P
                         ON		P.SECTR_ID	    = M.SECTR_ID
                            AND P.ITM_ID		= itm.ITM_ID
                            AND P.SIO_YYYY		= SUBSTR(M.DO_DY, 1, 4)
                            AND P.SIO_MM		= SUBSTR(M.DO_DY, 6, 2)
                            AND P.WH_CD         = M.WH_CD
#
        WHERE	M.SECTR_ID		= #{SS_USER_INFO.SECTR_ID, 	jdbcType=VARCHAR}
            AND M.DO_ID			= #{DO_ID}
            AND M.USE_YN		= 'Y'
    </select>

	<!-- OD_NO 로 출고번호 확인 -->
<!--	<select id="selWhoutInfoByTr" resultType="java.util.HashMap"  parameterType="java.util.HashMap">-->
<!--		SELECT-->
<!--			H.WHOUT_NO,-->
<!--		    H.OD_NO-->
<!--		FROM 	T_WHOUT_H H-->

<!--		WHERE 	H.SECTR_ID 	= #{SS_USER_INFO.SECTR_ID, 	jdbcType=VARCHAR}-->
<!--		  	AND H.WHOUT_GB		= #{WHOUT_GB}-->
<!--		  	AND H.OD_NO			= (-->
<!--										SELECT-->
<!--											PWP_NO-->
<!--										FROM 	T_PWP_H pwph-->
<!--													LEFT JOIN T_PWO_H pwoh-->
<!--															  ON 		pwph.SECTR_ID 	= pwoh.SECTR_ID-->
<!--																  AND pwph.PWO_ID			= pwoh.PWO_ID-->
<!--										WHERE 	pwoh.SECTR_ID 	= #{SS_USER_INFO.SECTR_ID, 	jdbcType=VARCHAR}-->
<!--											AND pwoh.TR_AGGR_DY 	= #{TR_AGGR_DY}-->
<!--											AND pwoh.TR_AGGR_TM 	= #{TR_AGGR_TM}-->
<!--											AND pwoh.TR_AGGR_SN 	= #{TR_AGGR_SN}-->
<!--									)-->
<!--	</select>-->

<!--	&lt;!&ndash; TR 에서 넘어온 경우 PWP_NO 파악 &ndash;&gt;-->
<!--	<select id="selPwpNoByTr" resultType="java.util.HashMap"  parameterType="java.util.HashMap">-->
<!--		SELECT-->
<!--			PWP_NO-->

<!--		FROM 	T_PWP_H pwph-->
<!--				LEFT JOIN T_PWO_H pwoh-->
<!--						ON		pwph.SECTR_ID 	= pwoh.SECTR_ID-->
<!--							AND pwph.PWO_NO			= pwoh.PWO_NO-->

<!--		WHERE	pwoh.SECTR_ID 	= #{SS_USER_INFO.SECTR_ID, 	jdbcType=VARCHAR}-->
<!--			AND	pwoh.TR_AGGR_DY 	= #{TR_AGGR_DY}-->
<!--			AND	pwoh.TR_AGGR_TM 	= #{TR_AGGR_TM}-->
<!--			AND	pwoh.TR_AGGR_SN 	= #{TR_AGGR_SN}-->

<!--	</select>-->


	<!-- 출고등록 관련 처리 -->
 	<select id="save" statementType="CALLABLE" parameterType="java.util.Map">
 		{ 
 			CALL PROC_WHOUT_REG (
 				#{CMD, jdbcType=VARCHAR},
 				#{XML_TEXT, jdbcType=VARCHAR},
 				#{SS_USER_INFO.MEM_ID, jdbcType=VARCHAR},
 				#{RS_MESSAGE, mode=OUT, jdbcType=VARCHAR},
 				#{ER_MESSAGE, mode=OUT, jdbcType=VARCHAR}
 			) 
 		}
 	</select>
	
</mapper>